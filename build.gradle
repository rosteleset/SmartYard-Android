// Top-level build file where you can add configuration options common to all sub-projects/modules.

def getMarketFlavorOrSync() {
    def taskNames = gradle.startParameter.taskNames
    // To make all libs available after sync or clean
    if (taskNames.isEmpty()) {
        println 'getMarketFlavor: Gradle sync.'
        return 'sync'
    }
    if (taskNames.contains('clean')) {
        println 'getMarketFlavor: Clean project.'
        return 'sync'
    }
    // To keep only specified flavor libs
    def matcher = taskNames =~ /(assemble|bundle)(Client|Teledom|TeledomTest)(\w+?)(Release|Debug)/
    if (matcher.find()) {
        def marketFlavor = matcher.group(3).toLowerCase()
        println 'getMarketFlavor: Flavor "' + marketFlavor + '" found.'
        return marketFlavor
    }
    throw new GradleException('getMarketFlavor: No flavor for "market" dimenion found.' +
            ' Check "site" dimension productFlavors and buildTypes names. taskNames = ' + taskNames)
}

buildscript {

    ext {
        compileSdkVersion = 34
        minSdkVersion = 23
        targetSdkVersion = 34
        kotlinVersion = '1.9.0'
        kspVersion = '1.9.0-1.0.13'
        appCompatVersion = '1.6.1'
        coreKtxVersion = '1.12.0'
        constraintLayoutVersion = '2.1.4'
        safeArgsVersion = '2.7.6'
        junitVersion = '4.13.2'
        extJunitVersion = '1.2.1'
        espressoCoreVersion = '3.2.0'
        playServicesVersion = '4.4.0'
        firebaseAnalyticsVersion = '20.0.2'
        firebaseCrashlyticsVersion = '18.2.7'
        firebaseCrashlyticsPluginVersion = '2.9.9'
        firebaseMessagingVersion = '21.1.0'
        agconnectVersion = "1.9.1.301"
        hianalyticsVersion = "6.12.0.301"
        hmsPushVersion = "6.11.0.300"
        timberVersion = '4.7.1'
        navigationVersion = '2.7.6'
        roomVersion = '2.6.1'
        coroutinesVersion = '1.7.1'
        retrofitVersion = '2.6.0'
        okHttpVersion = '4.9.2'
        ktlintVersion = '0.37.2'
        archCoreVersion = '2.0.1'
        pagingVersion = '1.0.1'
        lifecycleVersion = '2.2.0'
        lifecycleViewModelVersion = '2.7.0'
        moshi_version = '1.11.0'
        koin_version = '3.1.5'
        glide_version = '4.12.0'
        pinEntryEditText = '2.0.6'
        morphBottomNavigation = '1.0.1'
        androidxTransition = '1.4.1'
        linphoneVersion = '5.3.19'
        expandablelayoutVersion = '2.9.2'
        adapterdelegates = '4.2.0'
        openStreetMapVersion = '6.1.5'
        swipeLayout = '1.1.0'
        inputMask = '5.0.0'
        materialMaterial = '1.11.0'
        kotlinCodegen = '1.11.0'
        cameraxVersion = '1.3.4'
        viewpagerVersion = '1.0.0'
        pageIndicatorVersion = "v.1.0.3"
        calendarView = '0.3.4'
        threetenabp = '1.2.3'
        osmdroidAndroid = '6.1.10'
        playServicesLocation = '19.0.1'
        dexter = '6.2.2'
        exoPlayer = '2.18.5'
        installreferrer = '2.2'
        recyclerView = '1.3.2'
        preference_version = "1.2.0"
        splashscreen_version = '1.0.1'
        webrtc_version = '118.0.0'
    }

    repositories {
        google()
        maven { url 'https://jitpack.io' }
        mavenCentral()
        maven { url 'https://developer.huawei.com/repo/' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.google.gms:google-services:$playServicesVersion"
        classpath "com.google.firebase:firebase-crashlytics-gradle:$firebaseCrashlyticsPluginVersion"
        classpath "com.huawei.agconnect:agcp:$agconnectVersion"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$safeArgsVersion"
        classpath "io.insert-koin:koin-gradle-plugin:$koin_version"
        classpath "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin:$kspVersion"
    }
}

allprojects {
    //apply from: "$rootDir/ktlint.gradle"
    repositories {
        google()
        maven { url 'https://jitpack.io' }
        mavenCentral()
        maven { url 'https://developer.huawei.com/repo/' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
