// Top-level build file where you can add configuration options common to all sub-projects/modules.

def getMarketFlavorOrSync() {
    def taskNames = gradle.startParameter.taskNames
    // To make all libs available after sync or clean
    if (taskNames.isEmpty()) {
        println 'getMarketFlavor: Gradle sync.'
        return 'sync'
    }
    if (taskNames.size() == 1) {
        println 'getMarketFlavor: Non Build Task.'
        return 'sync'
    }
    // To keep only specified flavor libs
    def matcher = taskNames =~ /(assemble|bundle)(Client|TeledomTest|Teledom)(\w+?)(Release|Debug)/
    if (matcher.find()) {
        def marketFlavor = matcher.group(3).toLowerCase()
        println 'getMarketFlavor: Flavor "' + marketFlavor + '" found.'
        return marketFlavor
    }
    throw new GradleException('getMarketFlavor: No flavor for "market" dimenion found.' +
            ' Check "site" dimension productFlavors and buildTypes names. taskNames = ' + taskNames)
}

buildscript {
    ext {
        minSdk = 23
        targetSdk = 34
        compileSdk = 34
        adapterdelegates = '4.2.0'
        androidGraglePlugin = '8.2.2'
        androidxLegacy = '1.0.0'
        androidxTransition = '1.4.1'
        appCompat = '1.6.1'
        archCore = '2.0.1'
        calendarView = '0.3.4'
        camerax = '1.3.4'
        composeBom = '2022.10.00'
        constraintLayout = '2.1.4'
        coreKtx = '1.12.0'
        coroutines = '1.7.1'
        dexter = '6.2.2'
        espressoCore = '3.2.0'
        exoPlayer = '2.18.5'
        expandableLayout = '2.9.2'
        firebaseAnalytics = '20.0.2'
        firebaseCrashlytics = '18.2.7'
        firebaseCrashlyticsPlugin = '2.9.9'
        firebaseMessaging = '21.1.0'
        glide = '4.12.0'
        huaweiAgconnect = "1.9.1.301"
        huaweiAnalytics = "6.12.0.301"
        huaweiPush = "6.11.0.300"
        inputMask = '5.0.0'
        installReferrer = '2.2'
        junit = '4.13.2'
        junitExt = '1.2.1'
        junitRunnerRules = '1.6.0'
        koin = '3.1.5'
        kotlinGraglePlugin = '1.9.0'
        ktlint = '0.37.2'
        ksp = '1.9.0-1.0.13'
        lifecycle = '2.2.0'
        lifecycleViewModel = '2.7.0'
        linphone = '5.3.19'
        material = '1.11.0'
        mlkitBarcode = '17.2.0'
        morphBottomNavigation = '1.0.1'
        moshi = '1.11.0'
        moshiCodegen = '1.11.0'
        navigation = '2.7.6'
        okHttp = '4.9.2'
        onlineChatSdk = "0.1.3"
        openStreetMap = '6.1.10'
        pageIndicator = "v.1.0.3"
        paging = '1.0.1'
        pinEntryEditText = '2.0.6'
        playServices = '4.4.0'
        playServicesLocation = '19.0.1'
        preference = "1.2.0"
        recyclerView = '1.3.2'
        retrofit = '2.6.0'
        room = '2.6.1'
        rustorePush = '2.3.0'
        rustoreTracer = '0.3.1'
        safeArgs = '2.7.6'
        splashscreen = '1.0.1'
        swipeLayout = '1.1.0'
        swipeLayoutRambler = '1.0.17'
        threetenabp = '1.2.3'
        timber = '4.7.1'
        viewpager = '1.0.0'
        webrtc = '118.0.0'
    }

    repositories {
        google()
        maven { url 'https://jitpack.io' }
        mavenCentral()
        maven { url 'https://developer.huawei.com/repo/' }
        maven { url 'https://artifactory-external.vkpartner.ru/artifactory/maven' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$androidGraglePlugin"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinGraglePlugin"
        classpath "com.google.gms:google-services:$playServices"
        classpath "com.google.firebase:firebase-crashlytics-gradle:$firebaseCrashlyticsPlugin"
        classpath "com.huawei.agconnect:agcp:$huaweiAgconnect"
        classpath "ru.ok.tracer:tracer-plugin:$rustoreTracer"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$safeArgs"
        classpath "io.insert-koin:koin-gradle-plugin:$koin"
        classpath "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin:$ksp"
    }
}

allprojects {
    //apply from: "$rootDir/ktlint.gradle"
    repositories {
        google()
        maven { url 'https://jitpack.io' }
        mavenCentral()
        maven { url 'https://developer.huawei.com/repo/' }
        maven { url 'https://artifactory-external.vkpartner.ru/artifactory/maven' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
