plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs'
    id 'com.google.devtools.ksp'
}

def flavorOrSync = getMarketFlavorOrSync()

if (flavorOrSync == "sync" || flavorOrSync == "google") {
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'com.google.firebase.crashlytics'
}

if (flavorOrSync == "sync" || flavorOrSync == "huawei") {
    apply plugin: 'com.huawei.agconnect'
}

if (flavorOrSync == "sync" || flavorOrSync == "rustore") {
    apply plugin: 'ru.ok.tracer'
    tracer {
        defaultConfig {
            // See the "Settings" section
            pluginToken = "AZ2adhatS8Jbqzud284dlmJ9mSzeKVkfI3nAvuTfPed1"
            appToken = "MUdXdKSfjnboooRCNpeWcUcD45SzxWiN2rfRrEsOMrd"

            // Enables mapping files uploading during a build. The default value is true, i.e. the uploading is enabled.
            uploadMapping = true
            // Enables output of debugging information about the plugin operation. The default value is false.
            // printBuildUUID = true
        }
    }
}

android {
    compileSdk rootProject.compileSdk

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    defaultConfig {
        applicationId "com.sesameware.smartyard_oem"
        minSdk rootProject.minSdk
        targetSdk rootProject.targetSdk
        versionCode 60
        versionName '1.0.60'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resourceConfigurations += ["ru", "en", "kk", "uz", "hy"]
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        disableLint {
            signingConfig signingConfigs.debug
            debuggable true
        }
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // It must be in that order, otherwise google services.json won't catch up.
    flavorDimensions = ["site", "market"]

    productFlavors {
        google {
            dimension "market"
        }

        huawei {
            dimension "market"
        }

        rustore {
            dimension "market"
        }

        teledom {
            dimension "site"
            applicationId "com.sesameware.smartyard_oem"
        }

        teledomTest {
            dimension "site"
            applicationId "com.sesameware.smartyard_oem"
        }
    }

    buildFeatures {
        buildConfig true
        viewBinding true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.5.2'
    }
    namespace 'com.sesameware.smartyard_oem'
}

if (project.file('signing.gradle').exists()) {
    apply from: 'signing.gradle'
}

if (project.file('flavors.gradle').exists()) {
    apply from: 'flavors.gradle'
    // When using symlinks, some layout resources give an error during assembly.
    // Specifying the path to resources avoids this.
    apply from: 'source-sets.gradle'
}

project.afterEvaluate {
    //preSesamewareDebugBuild.dependsOn ktlint
}

repositories {
    maven {
        name "linphone.org maven repository"
        url "https://linphone.org/maven_repository/"
        content {
            includeGroup "org.linphone"
        }
    }
    mavenCentral()
}

dependencies {
    implementation project(':domain')
    implementation project(':data')
    implementation project(':lib')

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Ui
    implementation "androidx.appcompat:appcompat:$appCompat"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayout"
    implementation "androidx.transition:transition:$androidxTransition"
    implementation "com.google.android.material:material:$material"
    implementation "androidx.viewpager2:viewpager2:$viewpager"
    implementation "com.github.romandanylyk:PageIndicatorView:$pageIndicator"
    implementation "androidx.core:core-splashscreen:$splashscreen"

    // Google
    if (flavorOrSync == "sync" || flavorOrSync == "google") {
        implementation "com.google.firebase:firebase-analytics:$firebaseAnalytics"
        implementation "com.google.firebase:firebase-crashlytics-ktx:$firebaseCrashlytics"
        implementation "com.google.firebase:firebase-messaging:$firebaseMessaging"
        implementation "com.google.firebase:firebase-iid:$firebaseMessaging"
        implementation "com.google.android.gms:play-services-location:$playServicesLocation"
    }

    // Huawei
    if (flavorOrSync == "sync" || flavorOrSync == "huawei") {
        implementation "com.huawei.agconnect:agconnect-crash:$huaweiAgconnect"
        implementation "com.huawei.hms:hianalytics:$huaweiAnalytics"
        implementation "com.huawei.hms:push:$huaweiPush"
    }

    //Rustore
    if (flavorOrSync == "sync" || flavorOrSync == "rustore") {
        implementation "ru.ok.tracer:tracer-crash-report:$rustoreTracer"
        implementation "ru.ok.tracer:tracer-crash-report-native:$rustoreTracer"
        implementation "ru.rustore.sdk:pushclient:$rustorePush"
    }

    // Qr code scanner
    implementation "com.google.mlkit:barcode-scanning:$mlkitBarcode"

    // Utils
    implementation "androidx.core:core-ktx:$coreKtx"

    // Log
    implementation "com.jakewharton.timber:timber:$timber"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
    implementation "androidx.navigation:navigation-runtime-ktx:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation"

    // Room
    implementation "androidx.room:room-runtime:$room"
    implementation "androidx.room:room-ktx:$room"
    ksp "androidx.room:room-compiler:$room"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"

    // OkHttp & Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"
    implementation "com.squareup.okhttp3:okhttp:$okHttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp"

    ksp "com.squareup.moshi:moshi-kotlin-codegen:$moshiCodegen"

    // Architecture Components
    implementation "androidx.arch.core:core-runtime:$archCore"
    implementation "android.arch.paging:runtime:$paging"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleViewModel"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleViewModel"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleViewModel"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleViewModel"

    // Koin Core features
    implementation "io.insert-koin:koin-core:$koin"
    // Koin Test features
    testImplementation "io.insert-koin:koin-test:$koin"
    // Koin main features for Android
    implementation "io.insert-koin:koin-android:$koin"

    // Images
    implementation "com.github.bumptech.glide:glide:$glide"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide"
    implementation "androidx.legacy:legacy-support-v4:$androidxLegacy"
    ksp "com.github.bumptech.glide:compiler:$glide"

    // Serialization
    implementation "com.squareup.moshi:moshi-kotlin:$moshi"
    implementation "com.squareup.moshi:moshi-adapters:$moshi"

    // Pin Edit Text
    implementation("com.alimuzaffar.lib:pinentryedittext:$pinEntryEditText") {
        // Exclude is only needed if you already have
        // androidx.appcompat as a dependency in your app.
        exclude group: 'androidx.appcompat', module: 'appcompat'
    }

    // LinPhone SDK
    implementation "org.linphone:linphone-sdk-android:$linphone"

    // Expandable Layout
    implementation "com.github.cachapa:ExpandableLayout:$expandableLayout"

    // AdapterDelegates
    implementation "com.hannesdorfmann:adapterdelegates4:$adapterdelegates"

    // Open Street Map
    implementation "org.osmdroid:osmdroid-android:$openStreetMap"

    // Swipe
    implementation "com.github.rambler-digital-solutions:swipe-layout-android:$swipeLayoutRambler"

    // Mask
    implementation "com.github.RedMadRobot:input-mask-android:$inputMask"

    // CameraX
    implementation "androidx.camera:camera-core:$camerax"
    implementation "androidx.camera:camera-lifecycle:$camerax"
    implementation "androidx.camera:camera-camera2:$camerax"
    implementation "androidx.camera:camera-view:$camerax"

    //Permissions
    implementation "com.karumi:dexter:$dexter"

    // Calendar
    implementation "com.github.kizitonwose:CalendarView:$calendarView"
    implementation "com.jakewharton.threetenabp:threetenabp:$threetenabp"

    //exoplayer
    implementation "com.google.android.exoplayer:exoplayer-core:$exoPlayer"
    implementation "com.google.android.exoplayer:exoplayer-hls:$exoPlayer"
    implementation "com.google.android.exoplayer:exoplayer-ui:$exoPlayer"

    // Play Install Referrer library.
    implementation "com.android.installreferrer:installreferrer:$installReferrer"

    implementation "androidx.recyclerview:recyclerview:$recyclerView"

    // Kotlin
    implementation "androidx.preference:preference-ktx:$preference"

    //Chat
    implementation "com.github.bekannax:OnlineChatSdk:$onlineChatSdk"

    // Compose
    def composeBom = platform("androidx.compose:compose-bom:$composeBom")
    implementation(composeBom)
    androidTestImplementation(composeBom)
    implementation "androidx.compose.runtime:runtime"
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.foundation:foundation"
    implementation "androidx.compose.foundation:foundation-layout"
    implementation "androidx.compose.material:material"
    implementation "androidx.compose.runtime:runtime-livedata"
    implementation "androidx.compose.ui:ui-tooling"

    // WebRTC
    implementation "com.dafruits:webrtc:$webrtc"

    // Testing
    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test.ext:junit:$junitExt"
    androidTestImplementation "androidx.test:runner:$junitRunnerRules"
    androidTestImplementation "androidx.test:rules:$junitRunnerRules"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCore"
    androidTestImplementation "com.kaspersky.android-components:kaspresso:$kaspresso"
}
