plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'com.google.devtools.ksp'
}

android {
    compileSdk rootProject.compileSdk

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    defaultConfig {
        minSdk rootProject.minSdk
        targetSdk rootProject.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildFeatures {
        buildConfig true
    }

    buildTypes {
        disableLint {
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Обязательно в таком порядке, иначе google-services.json не подтянется
    flavorDimensions = ["site", "market"]

    productFlavors {
        google {
            dimension "market"
        }

        huawei {
            dimension "market"
        }

        rustore {
            dimension "market"
        }

        teledom {
            dimension "site"
            buildConfigField "String", "USER_AGENT", "\"\""
            buildConfigField "String", "PROVIDERS_URL", "\"https://isdn.lanta.me/providers.json\""
            buildConfigField "String", "DEFAULT_PHONE_PATTERN", "\"+7 (###) ###-##-##\""
            buildConfigField "String", "PROVIDER_NAME", "\"\""
            buildConfigField "String", "PROVIDER_URL", "\"\""
            buildConfigField "String", "SERVER_TZ", "\"Europe/Moscow\""
        }

        teledomTest {
            dimension "site"
            buildConfigField "String", "USER_AGENT", "\"\""
            buildConfigField "String", "PROVIDERS_URL", "\"https://isdn.lanta.me/providers.json\""
            buildConfigField "String", "DEFAULT_PHONE_PATTERN", "\"+7 (###) ###-##-##\""
            buildConfigField "String", "PROVIDER_NAME", "\"\""
            buildConfigField "String", "PROVIDER_URL", "\"\""
            buildConfigField "String", "SERVER_TZ", "\"Europe/Moscow\""
        }
    }
    namespace 'com.sesameware.data'
}

if (project.file('flavors.gradle').exists()) {
    apply from: 'flavors.gradle'
}

project.afterEvaluate {
    //preDebugBuild.dependsOn ktlint
    //preReleaseBuild.dependsOn ktlint
}

dependencies {
    implementation project(':domain')

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Utils
    implementation "androidx.core:core-ktx:$coreKtx"

    // OkHttp & Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"
    ksp "com.squareup.moshi:moshi-kotlin-codegen:$kotlinCodegen"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"

    //serialization
    implementation "com.squareup.moshi:moshi-kotlin:$moshi"
    implementation "com.squareup.moshi:moshi-adapters:$moshi"

    // Room
    implementation "androidx.room:room-runtime:$room"
    implementation "androidx.room:room-ktx:$room"
    implementation "androidx.room:room-rxjava2:$room"
    ksp "androidx.room:room-compiler:$room"

    // Koin Core features
    implementation "io.insert-koin:koin-core:$koin"
    // Koin Test features
    testImplementation "io.insert-koin:koin-test:$koin"
    // Koin main features for Android
    implementation "io.insert-koin:koin-android:$koin"

    // Log
    implementation "com.jakewharton.timber:timber:$timber"

    // Testing
    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test.ext:junit:$junitExt"
//    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCore"
}
