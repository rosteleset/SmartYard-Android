apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        disableLint {
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        teledom {
            buildConfigField "String", "USER_AGENT", "\"\""
            buildConfigField "String", "PROVIDERS_URL", "\"https://isdn.lanta.me/providers.json\""
        }

        teledomTest {
            buildConfigField "String", "USER_AGENT", "\"\""
            buildConfigField "String", "PROVIDERS_URL", "\"https://isdn.lanta.me/providers.json\""
        }

        freedom1 {
            buildConfigField "String", "USER_AGENT", "\"Freedom (Android)\""
            buildConfigField "String", "PROVIDERS_URL", "\"\""
        }
    }
}

project.afterEvaluate {
    //preDebugBuild.dependsOn ktlint
    //preReleaseBuild.dependsOn ktlint
}


dependencies {
    implementation project(':domain')

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$rootProject.kotlinReflect"

    // Utils
    implementation "androidx.core:core-ktx:$rootProject.coreKtxVersion"

    // Testing
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.extJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoCoreVersion"

    // OkHttp & Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttpVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$rootProject.retrofitVersion"
    kapt("com.squareup.moshi:moshi-kotlin-codegen:$rootProject.kotlinCodegen")

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"

    //serialization
    implementation "com.squareup.moshi:moshi-kotlin:$rootProject.moshi_version"
    implementation "com.squareup.moshi:moshi-adapters:$rootProject.moshi_version"

    // Room
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
    implementation "androidx.room:room-rxjava2:$rootProject.roomVersion"
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"

    // Koin Core features
    implementation "io.insert-koin:koin-core:$koin_version"
    // Koin Test features
    testImplementation "io.insert-koin:koin-test:$koin_version"
    // Koin main features for Android
    implementation "io.insert-koin:koin-android:$koin_version"

    // Log
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"
}
